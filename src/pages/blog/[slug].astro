---
import { getCollection, render } from 'astro:content'
import readingTime from 'reading-time'
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
	const posts = await getCollection('posts')
  return posts.map(p => ({
    params: { slug: p.data.slug },
    props: { post: p },
  }));
}

const { post } = Astro.props
const { title, slug, description, publishDate, label } = post.data;
const readingTimeEstimate = readingTime(post.body).text
const permalink = `${Astro.site.href}blog/${slug}`;
const { Content } = await render(post)
---

<BaseLayout title={title} description={description} permalink={permalink} current="blog">
  <header>
    <p>{publishDate} ~ {readingTimeEstimate}</p>
    <h1>{title}</h1>
    <div class="post-meta">
      <span class="post-description">{description}</span>
    </div>
    <hr />
  </header>
  <div class="container">
    <article class="content">
      <Content />
    </article>
    <hr />
  </div>
</BaseLayout>

<style>
  header {
    text-align: center;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }

  .post-meta {
    display: flex;
    justify-content: center;
    gap: 1.5em;
    margin-bottom: 1em;
    font-family: var(--font-family-sans);
    font-size: 1.1em;
    color: var(--text-secondary);
  }

  .post-label {
    background: var(--primary-color);
    color: #fff;
    border-radius: 6px;
    padding: 0.2em 0.8em;
    font-weight: 600;
    letter-spacing: 0.05em;
    text-transform: uppercase;
  }

  .post-description {
    font-style: italic;
  }
</style>
